pipeline {
    agent any

    triggers {
        githubPush()
    }

    environment {
        AWS_REGION = 'us-east-1'
        DOCKER_HUB_CREDENTIALS = credentials('dockerhub')
        // ECR_REGISTRY = '529881641329.dkr.ecr.us-east-1.amazonaws.com'
        // TAG = 'latest'
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: '7'))
        disableConcurrentBuilds()
        timeout(time: 10, unit: 'MINUTES')
        timestamps()
    }

    parameters {
        string(name: 'BRANCH_NAME', defaultValue: 'main', description: '')
        string(name: 'DB_IMAGE_NAME', defaultValue: 'db', description: '')
        string(name: 'AUTH_IMAGE_NAME', defaultValue: 'auth', description: '')
        string(name: 'REDIS_IMAGE_NAME', defaultValue: 'redis', description: '')
        string(name: 'UI_IMAGE_NAME', defaultValue: 'ui', description: '')
    }

    stages {
        stage('Checkout') {
            steps {
                dir("${WORKSPACE}/code") {
                    checkout([
                        $class: 'GitSCM',
                        branches: [[name: "*/${params.BRANCH_NAME}"]],
                        doGenerateSubmoduleConfigurations: false,
                        extensions: [[$class: 'LocalBranch']],
                        submoduleCfg: [],
                        userRemoteConfigs: [[
                            url: 'https://github.com/DEL-ORG/a1franklin-jenkins.git',
                            credentialsId: 'jenkins-github-new'
                        ]]
                    ])
                }
            }
        }
        
        stage('Docker Login') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: DOCKER_HUB_CREDENTIALS, usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh """
                        ls
                            // docker login -u \$DOCKER_USERNAME -p \$DOCKER_PASSWORD
                        """
                    }
                }
            }
        }

        // stage('Build DB') {
        //     steps {
        //         script {
        //             dir("${WORKSPACE}/code/db") {
        //                 sh """
        //                     sudo docker build -t ${ECR_REGISTRY}/${params.DB_IMAGE_NAME}:${TAG} .
        //                 """
        //             }
        //         }
        //     }
        // }

        // stage('Build Auth') {
        //     steps {
        //         script {
        //             dir("${WORKSPACE}/code/auth") {
        //                 sh """
        //                     sudo docker build -t ${ECR_REGISTRY}/${params.AUTH_IMAGE_NAME}:${TAG} .
        //                 """
        //             }
        //         }
        //     }
        // }

        // stage('Build Redis') {
        //     steps {
        //         script {
        //             dir("${WORKSPACE}/code/redis") {
        //                 sh """
        //                     sudo docker build -t ${ECR_REGISTRY}/${params.REDIS_IMAGE_NAME}:${TAG} .
        //                 """
        //             }
        //         }
        //     }
        // }

        // stage('Build UI') {
        //     steps {
        //         script {
        //             dir("${WORKSPACE}/code/ui") {
        //                 sh """
        //                     sudo docker build -t ${ECR_REGISTRY}/${params.UI_IMAGE_NAME}:${TAG} .
        //                 """
        //             }
        //         }
        //     }
        // }
    }

    post {
        always {
            // Logout from Docker Hub after the pipeline
            sh 'docker logout'
        }
    }
}
